input {
  kafka {
    id => "kafka-input"
    topics => ["telemetry", "clientinfo"]
    bootstrap_servers => "kafka-broker:9092"
    codec => json
  }

  #stdin {
  #  id => "stdin-input"
  #  codec => json
  #}
}

filter {
  # Rimuovo alcuni campi
  mutate {
    id => "mutate-filter"
    remove_field => ["@metadata", "@version", "ecs", "log", "input", "host", "agent", "event"]
    # Rimuovo anche "event" (era praticamente una copia dell'evento originale ricevuto)
  }

  # Gestisce i timestamp, e li inserisce nel campo @timestamp
   date {
     id => "date-filter"
     match => [ "[telemetry][timestamp]", "UNIX" ]
     timezone => "Europe/Rome"
     target => "@timestamp"
   }
  
  # Aggiunge un campo con la data formattata come stringa
  #ruby {
  #  id => "format-timestamp"
  #  code => "
  #    timestamp = event.get('@timestamp')
  #    # Usa to_s per ottenere la data in formato ISO8601 (la rappresentazione predefinita)
  #    formatted_time = timestamp.to_s
  #    event.set('pretty-timestamp', formatted_time)
  #  "
  }
}

output {
  # Output to Elasticsearch
  # Telemetry
  if [telemetry] {
    elasticsearch {
      id => "elasticsearch-telemetry"
      hosts => ["elasticsearch:9200"]
      document_id => "%{clientid}_%{@timestamp}"
      action => "create"
      index => "telemetry"
    }
  }
  # Clientinfo
  if [clientinfo] {
    elasticsearch {
      id => "elasticsearch-clientinfo"
      hosts => ["elasticsearch:9200"]
      document_id => "%{[clientinfo][clientid]}"
      action => "create"
      index => "clientinfo"
    }
  }

  # Output to stdout
  stdout {
    id => "stdout_output"
    codec => "json_lines"
  }
}
